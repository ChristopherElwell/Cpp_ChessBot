#include "data.h"
#include <array>
#include <cstdint>

using namespace std;

namespace data
{

// pc sq tables
const array<int, 768> MG_PCTBL = {
    // White Pawn
    82, 82, 82, 82, 82, 82, 82, 82, 180, 216, 143, 177, 150, 208, 116, 71, 76, 89, 108, 113, 147,
    138, 107, 62, 68, 95, 88, 103, 105, 94, 99, 59, 55, 80, 77, 94, 99, 88, 92, 57, 56, 78, 78, 72,
    85, 85, 115, 70, 47, 81, 62, 59, 67, 106, 120, 60, 82, 82, 82, 82, 82, 82, 82, 82,

    // White Knight
    170, 248, 303, 288, 398, 240, 322, 230, 264, 296, 409, 373, 360, 399, 344, 320, 290, 397, 374,
    402, 421, 466, 410, 381, 328, 354, 356, 390, 374, 406, 355, 359, 324, 341, 353, 350, 365, 356,
    358, 329, 314, 328, 349, 347, 356, 354, 362, 321, 308, 284, 325, 334, 336, 355, 323, 318, 232,
    316, 279, 304, 320, 309, 318, 314,

    // White Bishop
    336, 369, 283, 328, 340, 323, 372, 357, 339, 381, 347, 352, 395, 424, 383, 318, 349, 402, 408,
    405, 400, 415, 402, 363, 361, 370, 384, 415, 402, 402, 372, 363, 359, 378, 378, 391, 399, 377,
    375, 369, 365, 380, 380, 380, 379, 392, 383, 375, 369, 380, 381, 365, 372, 386, 398, 366, 332,
    362, 351, 344, 352, 353, 326, 344,

    // White Rook
    509, 519, 509, 528, 540, 486, 508, 520, 504, 509, 535, 539, 557, 544, 503, 521, 472, 496, 503,
    513, 494, 522, 538, 493, 453, 466, 484, 503, 501, 512, 469, 457, 441, 451, 465, 476, 486, 470,
    483, 454, 432, 452, 461, 460, 480, 477, 472, 444, 433, 461, 457, 468, 476, 488, 471, 406, 458,
    464, 478, 494, 493, 484, 440, 451,

    // White Queen
    997, 1025, 1054, 1037, 1084, 1069, 1068, 1070, 1001, 986, 1020, 1026, 1009, 1082, 1053, 1079,
    1012, 1008, 1032, 1033, 1054, 1081, 1072, 1082, 998, 998, 1009, 1009, 1024, 1042, 1023, 1026,
    1016, 999, 1016, 1015, 1023, 1021, 1028, 1022, 1011, 1027, 1014, 1023, 1020, 1023, 1039, 1030,
    990, 1017, 1036, 1027, 1033, 1040, 1022, 1026, 1024, 1007, 1016, 1035, 1010, 1000, 994, 975,

    // White King
    -65, 23, 16, -15, -56, -34, 2, 13, 29, -1, -20, -7, -8, -4, -38, -29, -9, 24, 2, -16, -20, 6,
    22, -22, -17, -20, -12, -27, -30, -25, -14, -36, -49, -1, -27, -39, -46, -44, -33, -51, -14,
    -14, -22, -46, -44, -30, -15, -27, 1, 7, -8, -64, -43, -16, 9, 8, -15, 36, 12, -54, 8, -28, 24,
    14,

    // Black Pawn
    82, 82, 82, 82, 82, 82, 82, 82, 47, 81, 62, 59, 67, 106, 120, 60, 56, 78, 78, 72, 85, 85, 115,
    70, 55, 80, 77, 94, 99, 88, 92, 57, 68, 95, 88, 103, 105, 94, 99, 59, 76, 89, 108, 113, 147,
    138, 107, 62, 180, 216, 143, 177, 150, 208, 116, 71, 82, 82, 82, 82, 82, 82, 82, 82,

    // Black Knight
    232, 316, 279, 304, 320, 309, 318, 314, 308, 284, 325, 334, 336, 355, 323, 318, 314, 328, 349,
    347, 356, 354, 362, 321, 324, 341, 353, 350, 365, 356, 358, 329, 328, 354, 356, 390, 374, 406,
    355, 359, 290, 397, 374, 402, 421, 466, 410, 381, 264, 296, 409, 373, 360, 399, 344, 320, 170,
    248, 303, 288, 398, 240, 322, 230,

    // Black Bishop
    332, 362, 351, 344, 352, 353, 326, 344, 369, 380, 381, 365, 372, 386, 398, 366, 365, 380, 380,
    380, 379, 392, 383, 375, 359, 378, 378, 391, 399, 377, 375, 369, 361, 370, 384, 415, 402, 402,
    372, 363, 349, 402, 408, 405, 400, 415, 402, 363, 339, 381, 347, 352, 395, 424, 383, 318, 336,
    369, 283, 328, 340, 323, 372, 357,

    // Black Rook
    458, 464, 478, 494, 493, 484, 440, 451, 433, 461, 457, 468, 476, 488, 471, 406, 432, 452, 461,
    460, 480, 477, 472, 444, 441, 451, 465, 476, 486, 470, 483, 454, 453, 466, 484, 503, 501, 512,
    469, 457, 472, 496, 503, 513, 494, 522, 538, 493, 504, 509, 535, 539, 557, 544, 503, 521, 509,
    519, 509, 528, 540, 486, 508, 520,

    // Black Queen
    1024, 1007, 1016, 1035, 1010, 1000, 994, 975, 990, 1017, 1036, 1027, 1033, 1040, 1022, 1026,
    1011, 1027, 1014, 1023, 1020, 1023, 1039, 1030, 1016, 999, 1016, 1015, 1023, 1021, 1028, 1022,
    998, 998, 1009, 1009, 1024, 1042, 1023, 1026, 1012, 1008, 1032, 1033, 1054, 1081, 1072, 1082,
    1001, 986, 1020, 1026, 1009, 1082, 1053, 1079, 997, 1025, 1054, 1037, 1084, 1069, 1068, 1070,

    // Black King
    -15, 36, 12, -54, 8, -28, 24, 14, 1, 7, -8, -64, -43, -16, 9, 8, -14, -14, -22, -46, -44, -30,
    -15, -27, -49, -1, -27, -39, -46, -44, -33, -51, -17, -20, -12, -27, -30, -25, -14, -36, -9, 24,
    2, -16, -20, 6, 22, -22, 29, -1, -20, -7, -8, -4, -38, -29, -65, 23, 16, -15, -56, -34, 2, 13};

const array<int, 768> EG_PCTBL = {
    // White Pawn
    94,
    94,
    94,
    94,
    94,
    94,
    94,
    94,
    272,
    267,
    252,
    228,
    241,
    226,
    259,
    281,
    188,
    194,
    179,
    161,
    150,
    147,
    176,
    178,
    126,
    118,
    107,
    99,
    92,
    98,
    111,
    111,
    107,
    103,
    91,
    87,
    87,
    86,
    97,
    93,
    98,
    101,
    88,
    95,
    94,
    89,
    93,
    86,
    107,
    102,
    102,
    104,
    107,
    94,
    96,
    87,
    94,
    94,
    94,
    94,
    94,
    94,
    94,
    94,

    // White Knight
    223,
    243,
    268,
    253,
    250,
    254,
    218,
    182,
    256,
    273,
    256,
    279,
    272,
    256,
    257,
    229,
    257,
    261,
    291,
    290,
    280,
    272,
    262,
    240,
    264,
    284,
    303,
    303,
    303,
    292,
    289,
    263,
    263,
    275,
    297,
    306,
    297,
    298,
    285,
    263,
    258,
    278,
    280,
    296,
    291,
    278,
    261,
    259,
    239,
    261,
    271,
    276,
    279,
    261,
    258,
    237,
    252,
    230,
    258,
    266,
    259,
    263,
    231,
    217,

    // White Bishop
    283,
    276,
    286,
    289,
    290,
    288,
    280,
    273,
    289,
    293,
    304,
    285,
    294,
    284,
    293,
    283,
    299,
    289,
    297,
    296,
    295,
    303,
    297,
    301,
    294,
    306,
    309,
    306,
    311,
    307,
    300,
    299,
    291,
    300,
    310,
    316,
    304,
    307,
    294,
    288,
    285,
    294,
    305,
    307,
    310,
    300,
    290,
    282,
    283,
    279,
    290,
    296,
    301,
    288,
    282,
    270,
    274,
    288,
    274,
    292,
    288,
    281,
    292,
    280,

    // White Rook
    525,
    522,
    530,
    527,
    524,
    524,
    520,
    517,
    523,
    525,
    525,
    523,
    509,
    515,
    520,
    515,
    519,
    519,
    519,
    517,
    516,
    509,
    507,
    509,
    516,
    515,
    525,
    513,
    514,
    513,
    511,
    514,
    515,
    517,
    520,
    516,
    507,
    506,
    504,
    501,
    508,
    512,
    507,
    511,
    505,
    500,
    504,
    496,
    506,
    506,
    512,
    514,
    503,
    503,
    501,
    509,
    503,
    514,
    515,
    511,
    507,
    499,
    516,
    492,

    // White Queen
    927,
    958,
    958,
    963,
    963,
    955,
    946,
    956,
    919,
    956,
    968,
    977,
    994,
    961,
    966,
    936,
    916,
    942,
    945,
    985,
    983,
    971,
    955,
    945,
    939,
    958,
    960,
    981,
    993,
    976,
    993,
    972,
    918,
    964,
    955,
    983,
    967,
    970,
    975,
    959,
    920,
    909,
    951,
    942,
    945,
    953,
    946,
    941,
    914,
    913,
    906,
    920,
    920,
    913,
    900,
    904,
    903,
    908,
    914,
    893,
    931,
    904,
    916,
    895,

    // White King
    -74,
    -35,
    -18,
    -18,
    -11,
    15,
    4,
    -17,
    -12,
    17,
    14,
    17,
    17,
    38,
    23,
    11,
    10,
    17,
    23,
    15,
    20,
    45,
    44,
    13,
    -8,
    22,
    24,
    27,
    26,
    33,
    26,
    3,
    -18,
    -4,
    21,
    24,
    27,
    23,
    9,
    -11,
    -19,
    -3,
    11,
    21,
    23,
    16,
    7,
    -9,
    -27,
    -11,
    4,
    13,
    14,
    4,
    -5,
    -17,
    -53,
    -34,
    -21,
    -11,
    -28,
    -14,
    -24,
    -43,

    // Black Pawn
    94,
    94,
    94,
    94,
    94,
    94,
    94,
    94,
    107,
    102,
    102,
    104,
    107,
    94,
    96,
    87,
    98,
    101,
    88,
    95,
    94,
    89,
    93,
    86,
    107,
    103,
    91,
    87,
    87,
    86,
    97,
    93,
    126,
    118,
    107,
    99,
    92,
    98,
    111,
    111,
    188,
    194,
    179,
    161,
    150,
    147,
    176,
    178,
    272,
    267,
    252,
    228,
    241,
    226,
    259,
    281,
    94,
    94,
    94,
    94,
    94,
    94,
    94,
    94,

    // Black Knight
    252,
    230,
    258,
    266,
    259,
    263,
    231,
    217,
    239,
    261,
    271,
    276,
    279,
    261,
    258,
    237,
    258,
    278,
    280,
    296,
    291,
    278,
    261,
    259,
    263,
    275,
    297,
    306,
    297,
    298,
    285,
    263,
    264,
    284,
    303,
    303,
    303,
    292,
    289,
    263,
    257,
    261,
    291,
    290,
    280,
    272,
    262,
    240,
    256,
    273,
    256,
    279,
    272,
    256,
    257,
    229,
    223,
    243,
    268,
    253,
    250,
    254,
    218,
    182,

    // Black Bishop
    274,
    288,
    274,
    292,
    288,
    281,
    292,
    280,
    283,
    279,
    290,
    296,
    301,
    288,
    282,
    270,
    285,
    294,
    305,
    307,
    310,
    300,
    290,
    282,
    291,
    300,
    310,
    316,
    304,
    307,
    294,
    288,
    294,
    306,
    309,
    306,
    311,
    307,
    300,
    299,
    299,
    289,
    297,
    296,
    295,
    303,
    297,
    301,
    289,
    293,
    304,
    285,
    294,
    284,
    293,
    283,
    283,
    276,
    286,
    289,
    290,
    288,
    280,
    273,

    // Black Rook
    503,
    514,
    515,
    511,
    507,
    499,
    516,
    492,
    506,
    506,
    512,
    514,
    503,
    503,
    501,
    509,
    508,
    512,
    507,
    511,
    505,
    500,
    504,
    496,
    515,
    517,
    520,
    516,
    507,
    506,
    504,
    501,
    516,
    515,
    525,
    513,
    514,
    513,
    511,
    514,
    519,
    519,
    519,
    517,
    516,
    509,
    507,
    509,
    523,
    525,
    525,
    523,
    509,
    515,
    520,
    515,
    525,
    522,
    530,
    527,
    524,
    524,
    520,
    517,

    // Black Queen
    903,
    908,
    914,
    893,
    931,
    904,
    916,
    895,
    914,
    913,
    906,
    920,
    920,
    913,
    900,
    904,
    920,
    909,
    951,
    942,
    945,
    953,
    946,
    941,
    918,
    964,
    955,
    983,
    967,
    970,
    975,
    959,
    939,
    958,
    960,
    981,
    993,
    976,
    993,
    972,
    916,
    942,
    945,
    985,
    983,
    971,
    955,
    945,
    919,
    956,
    968,
    977,
    994,
    961,
    966,
    936,
    927,
    958,
    958,
    963,
    963,
    955,
    946,
    956,

    // Black King
    -53,
    -34,
    -21,
    -11,
    -28,
    -14,
    -24,
    -43,
    -27,
    -11,
    4,
    13,
    14,
    4,
    -5,
    -17,
    -19,
    -3,
    11,
    21,
    23,
    16,
    7,
    -9,
    -18,
    -4,
    21,
    24,
    27,
    23,
    9,
    -11,
    -8,
    22,
    24,
    27,
    26,
    33,
    26,
    3,
    10,
    17,
    23,
    15,
    20,
    45,
    44,
    13,
    -12,
    17,
    14,
    17,
    17,
    38,
    23,
    11,
    -74,
    -35,
    -18,
    -18,
    -11,
    15,
    4,
    -17,
};

const array<int, 12> MG_EG_PCVALS = {0, 2, 2, 4, 8, 0, 0, 2, 2, 4, 8, 0};

// helpers
const array<const char *, 64> SQUARES = {
    "h1", "g1", "f1", "e1", "d1", "c1", "b1", "a1", "h2", "g2", "f2", "e2", "d2", "c2", "b2", "a2",
    "h3", "g3", "f3", "e3", "d3", "c3", "b3", "a3", "h4", "g4", "f4", "e4", "d4", "c4", "b4", "a4",
    "h5", "g5", "f5", "e5", "d5", "c5", "b5", "a5", "h6", "g6", "f6", "e6", "d6", "c6", "b6", "a6",
    "h7", "g7", "f7", "e7", "d7", "c7", "b7", "a7", "h8", "g8", "f8", "e8", "d8", "c8", "b8", "a8"};

const array<const char *, 15> PIECE_NAMES = {
    "White Pawn",  "White Knight", "White Bishop", "White Rook",   "White Queen",
    "White King",  "Black Pawn",   "Black Knight", "Black Bishop", "Black Rook",
    "Black Queen", "Black King",   "Whites",       "Blacks",       "Info"};

const array<const char, 12> PIECE_CODES = {
    'P', 'N', 'B', 'R', 'Q', 'K', 'p', 'n', 'b', 'r', 'q', 'k',
};

// move gen
const array<uint64_t, 64> KING_MOVES = {
    0x0000000000000302, 0x0000000000000705, 0x0000000000000e0a, 0x0000000000001c14,
    0x0000000000003828, 0x0000000000007050, 0x000000000000e0a0, 0x000000000000c040,
    0x0000000000030203, 0x0000000000070507, 0x00000000000e0a0e, 0x00000000001c141c,
    0x0000000000382838, 0x0000000000705070, 0x0000000000e0a0e0, 0x0000000000c040c0,
    0x0000000003020300, 0x0000000007050700, 0x000000000e0a0e00, 0x000000001c141c00,
    0x0000000038283800, 0x0000000070507000, 0x00000000e0a0e000, 0x00000000c040c000,
    0x0000000302030000, 0x0000000705070000, 0x0000000e0a0e0000, 0x0000001c141c0000,
    0x0000003828380000, 0x0000007050700000, 0x000000e0a0e00000, 0x000000c040c00000,
    0x0000030203000000, 0x0000070507000000, 0x00000e0a0e000000, 0x00001c141c000000,
    0x0000382838000000, 0x0000705070000000, 0x0000e0a0e0000000, 0x0000c040c0000000,
    0x0003020300000000, 0x0007050700000000, 0x000e0a0e00000000, 0x001c141c00000000,
    0x0038283800000000, 0x0070507000000000, 0x00e0a0e000000000, 0x00c040c000000000,
    0x0302030000000000, 0x0705070000000000, 0x0e0a0e0000000000, 0x1c141c0000000000,
    0x3828380000000000, 0x7050700000000000, 0xe0a0e00000000000, 0xc040c00000000000,
    0x0203000000000000, 0x0507000000000000, 0x0a0e000000000000, 0x141c000000000000,
    0x2838000000000000, 0x5070000000000000, 0xa0e0000000000000, 0x40c0000000000000,
};

const array<uint64_t, 64> KNIGHT_MOVES = {
    0x0000000000020400, 0x0000000000050800, 0x00000000000a1100, 0x0000000000142200,
    0x0000000000284400, 0x0000000000508800, 0x0000000000a01000, 0x0000000000402000,
    0x0000000002040004, 0x0000000005080008, 0x000000000a110011, 0x0000000014220022,
    0x0000000028440044, 0x0000000050880088, 0x00000000a0100010, 0x0000000040200020,
    0x0000000204000402, 0x0000000508000805, 0x0000000a1100110a, 0x0000001422002214,
    0x0000002844004428, 0x0000005088008850, 0x000000a0100010a0, 0x0000004020002040,
    0x0000020400040200, 0x0000050800080500, 0x00000a1100110a00, 0x0000142200221400,
    0x0000284400442800, 0x0000508800885000, 0x0000a0100010a000, 0x0000402000204000,
    0x0002040004020000, 0x0005080008050000, 0x000a1100110a0000, 0x0014220022140000,
    0x0028440044280000, 0x0050880088500000, 0x00a0100010a00000, 0x0040200020400000,
    0x0204000402000000, 0x0508000805000000, 0x0a1100110a000000, 0x1422002214000000,
    0x2844004428000000, 0x5088008850000000, 0xa0100010a0000000, 0x4020002040000000,
    0x0400040200000000, 0x0800080500000000, 0x1100110a00000000, 0x2200221400000000,
    0x4400442800000000, 0x8800885000000000, 0x100010a000000000, 0x2000204000000000,
    0x0004020000000000, 0x0008050000000000, 0x00110a0000000000, 0x0022140000000000,
    0x0044280000000000, 0x0088500000000000, 0x0010a00000000000, 0x0020400000000000,
};

const array<uint8_t, 768> SLIDING_MOVES = {
    0xfe, 0xfd, 0xfb, 0xf7, 0xef, 0xdf, 0xbf, 0x7f, 0x2, 0xfd, 0xfa, 0xf6, 0xee, 0xde, 0xbe, 0x7e,
    0x6,  0x5,  0xfb, 0xf4, 0xec, 0xdc, 0xbc, 0x7c, 0x2, 0x5,  0xfa, 0xf4, 0xec, 0xdc, 0xbc, 0x7c,
    0xe,  0xd,  0xb,  0xf7, 0xe8, 0xd8, 0xb8, 0x78, 0x2, 0xd,  0xa,  0xf6, 0xe8, 0xd8, 0xb8, 0x78,
    0x6,  0x5,  0xb,  0xf4, 0xe8, 0xd8, 0xb8, 0x78, 0x2, 0x5,  0xa,  0xf4, 0xe8, 0xd8, 0xb8, 0x78,
    0x1e, 0x1d, 0x1b, 0x17, 0xef, 0xd0, 0xb0, 0x70, 0x2, 0x1d, 0x1a, 0x16, 0xee, 0xd0, 0xb0, 0x70,
    0x6,  0x5,  0x1b, 0x14, 0xec, 0xd0, 0xb0, 0x70, 0x2, 0x5,  0x1a, 0x14, 0xec, 0xd0, 0xb0, 0x70,
    0xe,  0xd,  0xb,  0x17, 0xe8, 0xd0, 0xb0, 0x70, 0x2, 0xd,  0xa,  0x16, 0xe8, 0xd0, 0xb0, 0x70,
    0x6,  0x5,  0xb,  0x14, 0xe8, 0xd0, 0xb0, 0x70, 0x2, 0x5,  0xa,  0x14, 0xe8, 0xd0, 0xb0, 0x70,
    0x3e, 0x3d, 0x3b, 0x37, 0x2f, 0xdf, 0xa0, 0x60, 0x2, 0x3d, 0x3a, 0x36, 0x2e, 0xde, 0xa0, 0x60,
    0x6,  0x5,  0x3b, 0x34, 0x2c, 0xdc, 0xa0, 0x60, 0x2, 0x5,  0x3a, 0x34, 0x2c, 0xdc, 0xa0, 0x60,
    0xe,  0xd,  0xb,  0x37, 0x28, 0xd8, 0xa0, 0x60, 0x2, 0xd,  0xa,  0x36, 0x28, 0xd8, 0xa0, 0x60,
    0x6,  0x5,  0xb,  0x34, 0x28, 0xd8, 0xa0, 0x60, 0x2, 0x5,  0xa,  0x34, 0x28, 0xd8, 0xa0, 0x60,
    0x1e, 0x1d, 0x1b, 0x17, 0x2f, 0xd0, 0xa0, 0x60, 0x2, 0x1d, 0x1a, 0x16, 0x2e, 0xd0, 0xa0, 0x60,
    0x6,  0x5,  0x1b, 0x14, 0x2c, 0xd0, 0xa0, 0x60, 0x2, 0x5,  0x1a, 0x14, 0x2c, 0xd0, 0xa0, 0x60,
    0xe,  0xd,  0xb,  0x17, 0x28, 0xd0, 0xa0, 0x60, 0x2, 0xd,  0xa,  0x16, 0x28, 0xd0, 0xa0, 0x60,
    0x6,  0x5,  0xb,  0x14, 0x28, 0xd0, 0xa0, 0x60, 0x2, 0x5,  0xa,  0x14, 0x28, 0xd0, 0xa0, 0x60,
    0x7e, 0x7d, 0x7b, 0x77, 0x6f, 0x5f, 0xbf, 0x40, 0x2, 0x7d, 0x7a, 0x76, 0x6e, 0x5e, 0xbe, 0x40,
    0x6,  0x5,  0x7b, 0x74, 0x6c, 0x5c, 0xbc, 0x40, 0x2, 0x5,  0x7a, 0x74, 0x6c, 0x5c, 0xbc, 0x40,
    0xe,  0xd,  0xb,  0x77, 0x68, 0x58, 0xb8, 0x40, 0x2, 0xd,  0xa,  0x76, 0x68, 0x58, 0xb8, 0x40,
    0x6,  0x5,  0xb,  0x74, 0x68, 0x58, 0xb8, 0x40, 0x2, 0x5,  0xa,  0x74, 0x68, 0x58, 0xb8, 0x40,
    0x1e, 0x1d, 0x1b, 0x17, 0x6f, 0x50, 0xb0, 0x40, 0x2, 0x1d, 0x1a, 0x16, 0x6e, 0x50, 0xb0, 0x40,
    0x6,  0x5,  0x1b, 0x14, 0x6c, 0x50, 0xb0, 0x40, 0x2, 0x5,  0x1a, 0x14, 0x6c, 0x50, 0xb0, 0x40,
    0xe,  0xd,  0xb,  0x17, 0x68, 0x50, 0xb0, 0x40, 0x2, 0xd,  0xa,  0x16, 0x68, 0x50, 0xb0, 0x40,
    0x6,  0x5,  0xb,  0x14, 0x68, 0x50, 0xb0, 0x40, 0x2, 0x5,  0xa,  0x14, 0x68, 0x50, 0xb0, 0x40,
    0x3e, 0x3d, 0x3b, 0x37, 0x2f, 0x5f, 0xa0, 0x40, 0x2, 0x3d, 0x3a, 0x36, 0x2e, 0x5e, 0xa0, 0x40,
    0x6,  0x5,  0x3b, 0x34, 0x2c, 0x5c, 0xa0, 0x40, 0x2, 0x5,  0x3a, 0x34, 0x2c, 0x5c, 0xa0, 0x40,
    0xe,  0xd,  0xb,  0x37, 0x28, 0x58, 0xa0, 0x40, 0x2, 0xd,  0xa,  0x36, 0x28, 0x58, 0xa0, 0x40,
    0x6,  0x5,  0xb,  0x34, 0x28, 0x58, 0xa0, 0x40, 0x2, 0x5,  0xa,  0x34, 0x28, 0x58, 0xa0, 0x40,
    0x1e, 0x1d, 0x1b, 0x17, 0x2f, 0x50, 0xa0, 0x40, 0x2, 0x1d, 0x1a, 0x16, 0x2e, 0x50, 0xa0, 0x40,
    0x6,  0x5,  0x1b, 0x14, 0x2c, 0x50, 0xa0, 0x40, 0x2, 0x5,  0x1a, 0x14, 0x2c, 0x50, 0xa0, 0x40,
    0xe,  0xd,  0xb,  0x17, 0x28, 0x50, 0xa0, 0x40, 0x2, 0xd,  0xa,  0x16, 0x28, 0x50, 0xa0, 0x40,
    0x6,  0x5,  0xb,  0x14, 0x28, 0x50, 0xa0, 0x40, 0x2, 0x5,  0xa,  0x14, 0x28, 0x50, 0xa0, 0x40};

} // namespace data

namespace masks
{

const array<uint64_t, 15> DIAGS_UP = {0,
                                      0x102,
                                      0x10204,
                                      0x1020408,
                                      0x102040810,
                                      0x10204081020,
                                      0x1020408102040,
                                      0x102040810204080,
                                      0x204081020408000,
                                      0x408102040800000,
                                      0x810204080000000,
                                      0x01020408000000000,
                                      0x02040800000000000,
                                      0x04080000000000000,
                                      0};

const array<uint64_t, 15> DIAGS_DOWN = {0,
                                        0x8040,
                                        0x804020,
                                        0x80402010,
                                        0x8040201008,
                                        0x804020100804,
                                        0x80402010080402,
                                        0x8040201008040201,
                                        0x4020100804020100,
                                        0x2010080402010000,
                                        0x1008040201000000,
                                        0x0804020100000000,
                                        0x0402010000000000,
                                        0x0201000000000000,
                                        0};

const array<uint64_t, 8> RANKS = {RANK_1, RANK_2, RANK_3, RANK_4, RANK_5, RANK_6, RANK_7, RANK_8};

const array<uint64_t, 8> FILES = {FILE_H, FILE_G, FILE_F, FILE_E, FILE_D, FILE_C, FILE_B, FILE_A};
} // namespace masks